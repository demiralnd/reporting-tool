import { IuploadfileList, IattributeList } from "../common/ICommon";
declare class xmloperation {
    /**
     * @param tag Search xml tag name , div,title etc.
     * @param file Xml string
     * @return Xml element string
     */
    protected getElementsByOneTag(tag: string, file: string): string[];
}
export declare class ReadXml extends xmloperation {
    originFile: IuploadfileList;
    constructor(files: IuploadfileList);
    /**
     * @param path Search xml tag group , div,title etc.
     * @param fileName One of uploadfileList, uploadfileList is file group, {key:value}
     * @return Xml element calss
     */
    getElementsByTagName(path: string, fileName: string): Element[];
    /**
     * @param name One of uploadfileList's name, search for file by this parameter
     * @retrun Select a file from uploadfileList
     */
    private getFileByName;
}
export declare class Element extends xmloperation {
    elementString: string;
    attributeList: IattributeList;
    value: string;
    container: string;
    constructor(str: string);
    /**
     * @param name Get attribute by key in element
     * @return Single attribute
     */
    get(name: string): string | number | boolean;
    /**
     * @param tag Get elements by tag in elementString
     * @return Element group
     */
    getInnerElements(tag: string): Element[];
    /**
     * @desc get xml dom value and container, <container>value</container>
     */
    private setValue;
    /**
     * @desc get xml dom first tag, <a><b></b></a>, get a
     */
    private getFirstTag;
}
export interface IStyleCollections {
    [index: string]: Element[] | IattributeList;
}
export declare function getColor(color: Element, styles: IStyleCollections, type?: string): string;
/**
 * @dom xml attribute object
 * @attr attribute name
 * @d if attribute is null, return default value
 * @return attribute value
 */
export declare function getlineStringAttr(frpr: Element, attr: string): string;
export {};
